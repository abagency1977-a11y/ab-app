// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview A report narrative generation AI agent.
 *
 * - generateReportNarrative - A function that handles the report narrative generation process.
 * - GenerateReportNarrativeInput - The input type for the generateReportNarrative function.
 * - GenerateReportNarrativeOutput - The return type for the generateReportNarrative function.
 */

import { ai } from '@/ai/genkit-client';
import { z } from 'zod';

const GenerateReportNarrativeInputSchema = z.object({
  reportData: z.string().describe('The report data to be summarized.'),
});
export type GenerateReportNarrativeInput = z.infer<typeof GenerateReportNarrativeInputSchema>;

const GenerateReportNarrativeOutputSchema = z.object({
  narrative: z.string().describe('A brief narrative summarizing the key insights from the report data.'),
});
export type GenerateReportNarrativeOutput = z.infer<typeof GenerateReportNarrativeOutputSchema>;

export async function generateReportNarrative(
  input: GenerateReportNarrativeInput
): Promise<GenerateReportNarrativeOutput> {
  return generateReportNarrativeFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateReportNarrativePrompt',
  input: {schema: GenerateReportNarrativeInputSchema},
  output: {schema: GenerateReportNarrativeOutputSchema},
  prompt: `You are an expert business analyst specializing in summarizing business reports.

You will use this information to generate a brief narrative summarizing the key insights from the report data.

Report Data: {{{reportData}}}`,
});

const generateReportNarrativeFlow = ai.defineFlow(
  {
    name: 'generateReportNarrativeFlow',
    inputSchema: GenerateReportNarrativeInputSchema,
    outputSchema: GenerateReportNarrativeOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
